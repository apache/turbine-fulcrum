--------------------------------------------------------------------------
C O U P L I N G  I S S U E S
--------------------------------------------------------------------------

While the coupling issues are being sorted out, the service sources
are still in the jakarta-turbine repository. I'm just using a symlink
right now so that everything works in Turbine but I can test the
services in isolation. If you want to see the coupling for yourself:

mkdir -p src/java/org/apache/turbine
cd src/java/org/apache/turbine
ln -s <fullpath-to-turbine-package>/services services

SecurityService
---------------

User is tied to Servlets by the HttpSessionBindingListener
which makes the security service useless outside of servlets.
There's no reason the security service can't be used in
non servlet applications.
Some sort of Event/Listner setup can be rigged up to solve this, since
Fulcrum will be a dependency of Turbine.

BaseSecurityService.java is tied to JavaMail simply for the
base64 encoding. There are a number of base64 encoding
classes in Jakarta, take one of those and get rid of
this tie.
The base64 encoder from Tomcat is a possible replacement.

TemplateService
---------------

Remove RunData

IntakeService
-------------

I think Intake is pretty much bound to Turbine and doesn't
look like it can be a general validation service. With the
separate service builds this won't be a problem.

PullService
-----------

RunData can be removed from this service as well.

---

Overall even if there are a some coupling issues most of the
services are only going to be used in Turbine at first. The
separate build for each service will isolate the coupling
to a service. A service can state it's deps and have properties
set to satisfy any requirements.

The following classes are also used all over the services
so we need to get these in a common location. Maybe have
a little build for Turbine utilties until we get them
in the commons:

ObjectUtils.java
StringStackBuffer.java
StringUtils.java
list
