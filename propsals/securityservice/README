This is a proposal for a small and mostly transparent
change in the security system.

It replaces all "new " calls for Permission, Role and Group objects
with generator methods from BaseSecurityService. By doing so, the
classes used for these security objects become configurable in
Fulcrum.properties.

This is the same thing that already exists for the users (while lots
of developers seem to work on the Turbine User implementation, we seem
to be the only ones tackling the User/Role/Permission stuff. But then
again, our application is a very unusual one).

Basically we want to be able to replace all kinds of security objects
with our own objects, not just the user.

Same goes to the AccessControlList objects. As we use a custom ACL
object in our application, we need this configurable,
too. Unfortunately, AccessControlList is in Fulcrum (and Turbine-2)
not an interface but a Class. So this is the change: AccessControlList
becomes an Interface and there is an implementation class in
org.apache.fulcrum.security.impl.TurbineAccessControlList. This is the
default class to instantiate.

For your application, nothing changes, yet you have to recompile! The
reason for this is, that java records in your classes, that
org.apache.fulcrum.security.util.AccessControlList is a class. If you
just change fulcrum, then you get a mismatch and a java
exception. Simply recompiling fixes this.


Authors: 		Marco Knuettel <marco@intermeta.de>
			Henning P. Schmiedehausen <hps@intermeta.de>

 
