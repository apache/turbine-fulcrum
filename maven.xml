<project
  xmlns:j="jelly:core"
  xmlns:m="maven">

  <!-- ================================================================== -->
  <!-- T O R Q U E  G E N E R A T I O N  P R E  G O A L                   --> 
  <!-- ================================================================== -->
  <!-- This preGoal is executed before the the compilation goal so that   -->
  <!-- the sources for the security service and the scheduler.            -->
  <!-- ================================================================== -->

  <preGoal name="java:compile">

    <attainGoal name="check-om"/>

    <path id="maven.compile.src.set">
      <pathelement location="${pom.build.SourceDirectory}"/>
    </path>

    <j:if test="${omGenerated != 'true'}">

    <echo>Generating sources ...</echo>

    <!--
    We could create a fileset in the project to manage this
    but we should really only have one source directory.
    -->

    <copy todir="${maven.prepareSourceDirectory}" overwrite="yes">
      <fileset dir="src/java"/>
    </copy>

    <attainGoal name="security-om"/>
    <attainGoal name="scheduler-om"/>
    
    </j:if>
    
  </preGoal>

  <!-- ================================================================== -->
  <!-- C H E C K  O M                                                     -->
  <!-- ================================================================== -->

  <!-- this will soon be moved into the security services build. -->

  <goal name="check-om">

    <property
      name="omStatusFile"
      value="${maven.prepareSourceDirectory}/report.turbine.om.generation"
    />

    <j:set var="omGenerated" value="false"/>
    
    <uptodate
      property="omGenerated"
      targetfile="${omStatusFile}">
      <srcfiles
        dir="."
        includes="turbine-schema.xml"
      />
    </uptodate>
    
  </goal>

  <goal
    name="init-taskdef">

    <taskdef name="torque-om"
      classname="org.apache.torque.task.TorqueDataModelTask">
      <classpath refid="maven.dependency.classpath"/>
    </taskdef>

  </goal>

  <goal
    name="security-om"
    prereqs="init-taskdef">

<echo>
+--------------------------------------------------------------------
|
| G E N E R A T I N G  S E C U R I T Y  S O U R C E S
|
+--------------------------------------------------------------------
</echo>

    <filter token="DATABASE_DEFAULT" value="${security.database.name}"/>
    <!-- is there a way to load this from an xml file? -->
    <filter token="EXTRA_USER_COLUMNS" value="${security.extra.user.columns}"/>
    <copy
      todir="${maven.prepareSourceDirectory}"
      file="${schemaDirectory}/turbine-schema.xml"
      filtering="yes"
    />

    <torque-om
      contextProperties="project.properties"
      controlTemplate="${OMControlTemplate}"
      outputDirectory="${maven.prepareSourceDirectory}"
      useClasspath="true"
      outputFile="report.turbine.om.generation"
      targetPackage="${securityPackage}"
      xmlFile="${maven.prepareSourceDirectory}/turbine-schema.xml"
      targetDatabase="${database}"
    />

  </goal>

  <goal
    name="scheduler-om"
    prereqs="init-taskdef">

<echo>
+--------------------------------------------------------------------
|
| G E N E R A T I N G  S C H E D U L E R  S O U R C E S
|
+--------------------------------------------------------------------
</echo>

    <filter token="DATABASE_DEFAULT" value="${scheduler.database.name}"/>
    <copy
      todir="${maven.prepareSourceDirectory}"
      file="${schemaDirectory}/scheduler-schema.xml"
      filtering="yes"
    />

    <torque-om
      contextProperties="project.properties"
      controlTemplate="${OMControlTemplate}"
      outputDirectory="${maven.prepareSourceDirectory}"
      useClasspath="true"
      outputFile="report.turbine.scheduler.generation"
      targetPackage="${schedulerPackage}"
      xmlFile="${maven.prepareSourceDirectory}/scheduler-schema.xml"
    />

  </goal>

</project>
