<?xml version="1.0"?>

<document>

  <properties>
    <title>Naming Component</title>
    <author email="epugh@opensourceconnections.com">Eric Pugh</author>
  </properties>

  <body>

  <section name="Overview">
    <p>
    The Naming Service provides access to JNDI contexts.
    </p>
      
    <p>
      It is written 
      for use in Turbine but it can be used in any container compatible 
      with Avalon's ECM container.
    </p>    
  </section>
  
<section name="Configuration">

    <p>
      First, here is the role configuration.
    </p>

    <source>
    <![CDATA[
        <role
            name="org.apache.fulcrum.naming.NamingService"
            shorthand="naming"
            default-class="org.apache.fulcrum.naming.DefaultNamingService"/>
    ]]>
    </source>

      <p>
        And here is the configuration:
      </p>
    <source>

    <![CDATA[
        <naming/> (TODO)
    ]]>
    </source>

  </section>

  <section name="Usage">

   
<source><![CDATA[
try
{
    // Set up the naming provider. This may not always be necessary,
    // depending on how your Java system is configured.
    System.setProperty("java.naming.factory.initial",
      "org.jnp.interfaces.NamingContextFactory");
    System.setProperty("java.naming.provider.url",
      "localhost:1099");
    // Get a naming context
    InitialContext jndiContext = new InitialContext();

    // Get a reference to the Interest Bean
    Object ref = jndiContext.lookup("interest/Interest");

    // Get a reference from this to the Bean's Home interface
    InterestHome home = (InterestHome)
        PortableRemoteObject.narrow (ref, InterestHome.class);

    // Create an Interest object from the Home interface
    m_interest = home.create();
}
catch(Exception e)
{
    out.println("<LI>Context failed: " + e);
}
]]></source>


  </section> 

</body>
</document>
