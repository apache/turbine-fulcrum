<?xml version="1.0"?>

<document>

  <properties>
    <title>Building Fulcrum</title>
    <author email="pete@kazmier.com">Pete Kazmier</author>
    <author email="quintonm@bellsouth.net">Quinton McCombs</author>
    <author email="epugh@upstate.com">Eric Pugh</author>
  </properties>

  <body>

    <section name="Building Fulcrum">
      <p>
        Building Fulcrum from CVS is now very easy because it has been
        Maven-enabled.  Before you begin, you'll need to check out the
        <code>jakarta-turbine-fulcrum</code> CVS repository (if you are
        not familiar with the Jakarta CVS repositories, please refer to
        the <a href="/site/cvsindex.html">documentation</a>).  
      </p>
      <p>
        Please refer to the Maven <a
        href="http://maven.apache.org/getting-started.html">Getting
        Started</a> document for instructions on how to install and
        use Maven.
      </p>
      <p>
        <strong>Important!</strong>  Currently when you attempt to do a 
        build, the code in 'src/java' is compiled as well as the individual
        components.  Make sure to rename 'src' to 'src-OFF' to prevent 
        this.  This is only until all the code in 'src/java' either is 
        converted to Avalon components, or discarded.
      </p>
      <p>
        From the root directory of the fulcrum project (where you checked
        out the code to or unpacked a source distribution), simply type 
        'maven' and press enter.  This will start a process that will
        build each component.  After the component is built, it will be 
        installed into you local maven repository.
      </p>
      <p>
        To build a local copy of the documentation, use 'maven multiproject'.
        This will build a local copy of the web site in the 'target/docs' 
        directory.
      </p>
      
      <subsection name="Maven Repositories">
        <p>
          If you are willing to build with an "unofficial" repository, you can uncomment
          the <code>maven.repo</code> property in the project.properties file.  This will
          allow Maven to download from a Turbine repository the various jars that are not
          currently in the main Maven repository.
        </p>
      </subsection>
    </section>
  </body>
</document>

