<?xml version="1.0"?>

<project name="Fulcrum" default="jar" basedir=".">

  <!-- Allow any user specific values to override the defaults -->
  <property file="${user.home}/build.properties" />
  <!-- Allow user defaults for this project -->
  <property file="build.properties" />
  <!-- Set default values for the build -->
  <property file="default.properties" />

  <!-- Construct compile classpath -->
  <path id="classpath">
    <pathelement location="${bsf.jar}"/>
    <pathelement location="${commons-collections.jar}"/>
    <pathelement location="${commons-email.jar}"/>
    <pathelement location="${commons-lang.jar}"/>
    <pathelement location="${commons-codec.jar}"/>
    <pathelement location="${commons-pool.jar}"/>
    <pathelement location="${commons-fileupload.jar}"/>
    <pathelement location="${jaf.jar}"/>
    <pathelement location="${javamail.jar}"/>
    <pathelement location="${jdbc.jar}"/>
    <pathelement location="${jndi.jar}"/>
    <pathelement location="${log4j.jar}"/>
    <pathelement location="${regexp.jar}"/>
    <pathelement location="${servlet.jar}"/>
    <pathelement location="${stratum.jar}"/>
    <pathelement location="${torque.jar}"/>
    <pathelement location="${velocity.jar}"/>
    <pathelement location="${village.jar}"/>
    <pathelement location="${xalan.jar}"/>
    <pathelement location="${xerces.jar}"/>
    <pathelement location="${xmlParserAPIs.jar}"/>
    <pathelement location="${xmlrpc.jar}"/>
    <pathelement location="${dvsl.jar}"/>
    <pathelement location="${junit.jar}"/>
    <pathelement location="${dom4j.jar}" />
    <pathelement location="tdk.jar" />
  </path>

  <!-- ================================================================== -->
  <!-- U P D A T E  J A R S                                               -->
  <!-- ================================================================== -->

  <target
    name="update-jars">

    <taskdef
      name="httpget"
      className="org.apache.tdk.task.Get">
      <classpath refid="classpath"/>
    </taskdef>

    <!-- If you need proxy support you'll have to manually add:

         proxyHost="x"
         proxyPort="y"

         We'll clean this up but it worked for a user behind a proxy.
    -->

    <httpget
      baseUrl="http://jakarta.apache.org/turbine/jars/"
      dest="${lib.repo}"
      dependencyFile="deps.list"
    />

  </target>

  <!-- ================================================================== -->
  <!-- E N V I R O N M E N T                                             -->
  <!-- ================================================================== -->

  <target name="env">
    <echo message="java.home = ${java.home}"/>
    <echo message="user.home = ${user.home}"/>
    <echo message="lib.repo = ${lib.repo}"/>

    <echo message="bsf.jar = ${bsf.jar}"/>
    <echo message="commons-collections.jar = ${commons-collections.jar}"/>
    <echo message="commons-lang.jar = ${commons-lang.jar}"/>
    <echo message="commons-codec.jar = ${commons-codec.jar}"/>
    <echo message="commons-pool.jar = ${commons-pool.jar}"/>
    <echo message="commons-fileupload.jar = ${commons-fileupload.jar}"/>
    <echo message="dom4j.jar = ${dom4j.jar}"/>
    <echo message="dvsl.jar = ${dvsl.jar}"/>
    <echo message="jaf.jar = ${jaf.jar}"/>
    <echo message="javamail.jar = ${javamail.jar}"/>
    <echo message="jdbc.jar = ${jdbc.jar}"/>
    <echo message="jndi.jar = ${jndi.jar}"/>
    <echo message="log4j.jar = ${log4j.jar}"/>
    <echo message="regexp.jar = ${regexp.jar}"/>
    <echo message="servlet.jar = ${servlet.jar}"/>
    <echo message="torque.jar = ${torque.jar}"/>
    <echo message="velocity.jar = ${velocity.jar}"/>
    <echo message="village.jar = ${village.jar}"/>
    <echo message="xalan.jar = ${xalan.jar}"/>
    <echo message="xerces.jar = ${xerces.jar}"/>
    <echo message="xmlrpc.jar = ${xmlrpc.jar}"/>
    <echo message="[optional] commons-email.jar = ${commons-email.jar}"/>
  </target>

  <!-- ================================================================== -->
  <!-- U S A G E                                                          -->
  <!-- ================================================================== -->

  <target name="usage">
    <echo message="use -projecthelp to see the available targets"/>
  </target>

  <!-- ================================================================== -->
  <!-- I N I T                                                            -->
  <!-- ================================================================== -->

  <target name="init">
    <available
      classname="org.apache.velocity.anakia.AnakiaTask"
      property="AnakiaTask.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.velocity.runtime.Runtime"
      property="velocity.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.xerces.parsers.SAXParser"
      property="xerces.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.xalan.processor.XSLTSchema"
      property="xalan.present"
      classpathref="classpath"
    />

    <available
      classname="com.workingdogs.village.Column"
      property="village.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.log4j.Category"
      property="log4j.present"
      classpathref="classpath"
    />

    <available
      classname="javax.sql.ConnectionPoolDataSource"
      property="jdbc.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.torque.Torque"
      property="torque.present"
      classpathref="classpath"
    />

    <available
      classname="com.ibm.bsf.BSFManager"
      property="bsf.present"
      classpathref="classpath"
    />

    <available
      classname="javax.servlet.http.HttpServletRequest"
      property="servlet.present"
      classpathref="classpath"
    />

    <available
      classname="javax.mail.internet.MimeUtility"
      property="javamail.present"
      classpathref="classpath"
    />

    <available
      classname="javax.activation.DataSource"
      property="jaf.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.xmlrpc.XmlRpcException"
      property="xmlrpc.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.commons.collections.ExtendedProperties"
      property="commons-collections.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.commons.lang.exception.NestableException"
      property="commons-lang.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.commons.codec.base64.Base64"
      property="commons-codec.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.commons.pool.KeyedObjectPool"
      property="commons-pool.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.commons.fileupload.FileUpload"
      property="commons-fileupload.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.commons.mail.SimpleEmail"
      property="commons-email.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.regexp.RE"
      property="regexp.present"
      classpathref="classpath"
    />

    <available
      classname="org.apache.tools.dvsl.DVSL"
      property="dvsl.present"
      classpathref="classpath"
    />

    <available
      classname="org.dom4j.Document"
      property="dom4j.present"
      classpathref="classpath"
    />
  </target>

  <!-- ================================================================== -->
  <!-- P R O P E R T Y  C H E C K S  A N D  W A R N I N G S               -->
  <!-- ================================================================== -->

  <target name="check.velocity" unless="velocity.present">
    <antcall target="property-warning">
      <param name="name" value="velocity.jar"/>
      <param name="value" value="${velocity.jar}"/>
    </antcall>
  </target>

  <target name="check.log4j" unless="log4j.present">
    <antcall target="property-warning">
      <param name="name" value="log4j.jar"/>
      <param name="value" value="${log4j.jar}"/>
    </antcall>
  </target>

  <target name="check.torque" unless="torque.present">
    <antcall target="property-warning">
      <param name="name" value="torque.jar"/>
      <param name="value" value="${torque.jar}"/>
    </antcall>
  </target>

  <target name="check.bsf" unless="bsf.present">
    <antcall target="property-warning">
      <param name="name" value="bsf.jar"/>
      <param name="value" value="${bsf.jar}"/>
    </antcall>
  </target>

  <target name="check.servlet" unless="servlet.present">
    <antcall target="property-warning">
      <param name="name" value="servlet.jar"/>
      <param name="value" value="${servlet.jar}"/>
    </antcall>
  </target>

  <target name="check.javamail" unless="javamail.present">
    <antcall target="property-warning">
      <param name="name" value="javamail.jar"/>
      <param name="value" value="${javamail.jar}"/>
    </antcall>
  </target>

  <target name="check.jaf" unless="jaf.present">
    <antcall target="property-warning">
      <param name="name" value="jaf.jar"/>
      <param name="value" value="${jaf.jar}"/>
    </antcall>
  </target>

  <target name="check.xalan" unless="xalan.present">
    <antcall target="property-warning">
      <param name="name" value="xalan.jar"/>
      <param name="value" value="${xalan.jar}"/>
    </antcall>
  </target>

  <target name="check.xerces" unless="xerces.present">
    <antcall target="property-warning">
      <param name="name" value="xerces.jar"/>
      <param name="value" value="${xerces.jar}"/>
    </antcall>
  </target>

  <target name="check.xmlrpc" unless="xmlrpc.present">
    <antcall target="property-warning">
      <param name="name" value="xmlrpc.jar"/>
      <param name="value" value="${xmlrpc.jar}"/>
    </antcall>
  </target>

  <target name="check.commons-collections"
          unless="commons-collections.present">
    <antcall target="property-warning">
      <param name="name" value="commons-collections.jar"/>
      <param name="value" value="${commons-collections.jar}"/>
    </antcall>
  </target>

  <target name="check.commons-lang" unless="commons-lang.present">
    <antcall target="property-warning">
      <param name="name" value="commons-lang.jar"/>
      <param name="value" value="${commons-lang.jar}"/>
    </antcall>
  </target>

  <target name="check.commons-codec" unless="commons-codec.present">
    <antcall target="property-warning">
      <param name="name" value="commons-codec.jar"/>
      <param name="value" value="${commons-codec.jar}"/>
    </antcall>
  </target>

  <target name="check.commons-pool" unless="commons-pool.present">
    <antcall target="property-warning">
      <param name="name" value="commons-pool.jar"/>
      <param name="value" value="${commons-pool.jar}"/>
    </antcall>
  </target>

  <target name="check.commons-fileupload" unless="commons-fileupload.present">
    <antcall target="property-warning">
      <param name="name" value="commons-fileupload.jar"/>
      <param name="value" value="${commons-fileupload.jar}"/>
    </antcall>
  </target>

  <target name="check.regexp" unless="regexp.present">
    <antcall target="property-warning">
      <param name="name" value="regexp.jar"/>
      <param name="value" value="${regexp.jar}"/>
    </antcall>
  </target>

  <target name="check.dvsl" unless="dvsl.present">
    <antcall target="property-warning">
      <param name="name" value="dvsl.jar"/>
      <param name="value" value="${dvsl.jar}"/>
    </antcall>
  </target>

  <target name="check.dom4j" unless="dom4j.present">
    <antcall target="property-warning">
      <param name="name" value="dom4j.jar"/>
      <param name="value" value="${dom4j.jar}"/>
    </antcall>
  </target>

<!--
  This is commented out because the inclusion of the .jar file is
  conditional depending on whether or not it is in your path. This
  is kept here in the event that this conditional requirement is
  removed in the future.

  <target name="check.commons-email" unless="commons-email.present">
    <antcall target="property-warning">
      <param name="name" value="commons-email.jar"/>
      <param name="value" value="${commons-email.jar}"/>
    </antcall>
  </target>
-->

  <target name="property-warning">
    <echo>
      +----------------------------------------------------------------+
      + F A I L E D  R E Q U I R E M E N T                             |
      +----------------------------------------------------------------+
      | You must define the following property in order                |
      | to build Fulcrum:                                               |
      |                                                                |
      | ${name} = ${value}
      |                                                                |
      | You can set this property in the provided build.properties     |
      | file, or you may set this property in your                     |
      | ${user.home}/build.properties file.
      +----------------------------------------------------------------+
    </echo>
    <fail message="Failed Requirement"/>
  </target>

  <!-- ================================================================== -->
  <!-- P R E P A R E                                                      -->
  <!-- ================================================================== -->

  <target name="create-dirs">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.dir}/classes"/>
    <mkdir dir="${build.dir}/src"/>
  </target>

  <target name="include-email" if="commons-email.present">
    <copy todir="${build.dir}/src/org" overwrite="no">
      <fileset dir="${src.dir}/util/org"/>
    </copy>

    <copy todir="${build.dir}/src/org" overwrite="yes">
      <fileset dir="${src.dir}/util/org"/>
    </copy>
  </target>

  <target name="prepare"
    depends="init,env,create-dirs,
        check.velocity,check.log4j,check.torque,check.bsf,
        check.servlet,check.javamail,check.jaf,check.xerces,check.xalan,
        check.xmlrpc,check.commons-collections,check.commons-lang,
        check.commons-codec,check.regexp,check.dvsl,check.dom4j,
        check.commons-fileupload,check.commons-pool,include-email,om">

    <!-- We have some static files that should overwrite
         The torque generated files so overwrite must be
         set to 'yes'. -->
    <copy todir="${build.dir}/src/org" overwrite="yes">
      <fileset dir="${src.dir}/core/org"/>
      <fileset dir="${src.dir}/services/org"/>
    </copy>
  </target>

  <!-- ================================================================== -->
  <!-- C O M P I L E                                                      -->
  <!-- ================================================================== -->

  <target
    name="compile"
    depends="prepare"
    description="--> compiles the source code">

    <javac srcdir="${build.dir}/src"
      destdir="${build.dir}/classes"
      excludes="**/package.html"
      debug="${debug}"
      deprecation="${deprecation}"
      optimize="${optimize}">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="compile-test" depends="compile"
          description="--> compiles the test source code">
    <mkdir dir="${build.dir}/test"/>

    <javac srcdir="${src.dir}/test"
      destdir="${build.dir}/test"
      excludes="**/package.html"
      debug="${debug}"
      deprecation="${deprecation}"
      optimize="${optimize}">
      <classpath refid="classpath"/>
      <classpath>
        <pathelement location="${build.dir}/classes"/>
      </classpath>
    </javac>
  </target>

  <!-- ================================================================== -->
  <!-- J A R                                                              -->
  <!-- ================================================================== -->

  <target name="jar" depends="compile" description="--> generates the fulcrum.jar">

    <!-- copy intake.dtd to the right place -->
    <copy
      file="intake.dtd"
      todir="${build.dir}/classes/org/apache/fulcrum/intake/transform"
    />

    <jar jarfile="${build.dir}/${final.name}.jar"
         basedir="${build.dir}/classes"
         excludes="**/package.html"/>
  </target>

  <!-- ================================================================== -->
  <!-- J A V A D O C S                                                    -->
  <!-- ================================================================== -->

  <target name="javadocs"
            depends="prepare"
            description="--> generates the API documentation">
    <mkdir dir="${docs.dest}/api"/>

    <javadoc
      sourcepath="${build.src}"
      packagenames="${package}.*"
      destdir="${javadoc.destdir}"
      author="true"
      private="true"
      version="true"
      use="true"
      windowtitle="${name} ${version} API"
      doctitle="${name} ${version} API"
      bottom="Copyright &amp;copy; ${year} Apache Software Foundation. All Rights Reserved."
      >
      <classpath refid="classpath"/>
    </javadoc>
  </target>

  <!-- ================================================================== -->
  <!-- C L E A N                                                          -->
  <!-- ================================================================== -->

  <target name="clean" description="--> cleans up the build directory">
    <delete dir="${build.dir}"/>
    <delete file="velocity.log"/>
    <delete dir="${docs.dest}"/>
    <delete>
        <fileset dir="${src.dir}/services">
            <include name="report.turbine.*.generation"/>
        </fileset>
    </delete>
    <delete>
        <fileset dir="${src.dir}/services/org/apache/fulcrum">
            <include name="**/BaseTurbine*.java"/>
            <include name="**/BaseJob*.java"/>
            <include name="**/JobEntryPeer.java"/>
            <include name="**/TurbineRolePermission.java"/>
            <include name="**/TurbineRolePermissionPeer.java"/>
            <include name="**/TurbineUserGroupRole.java"/>
            <include name="**/TurbineUserGroupRolePeer.java"/>
        </fileset>
    </delete>
    <delete dir="${src.dir}/services/org/apache/fulcrum/schedule/map"
            quiet="true"/>
    <delete dir="${src.dir}/services/org/apache/fulcrum/security/impl/db/entity/map"
            quiet="true"/>

  </target>

  <!-- ================================================================== -->
  <!-- A N A K I A  D O C U M E N T A T I O N                             -->
  <!-- ================================================================== -->

  <target name="check_for_jdom">
    <available
      property="jdom.present"
      classname="org.jdom.JDOMException">
      <classpath>
         <fileset dir="${jakarta.site2}/lib">
           <include name="*.jar"/>
         </fileset>
      </classpath>
    </available>
  </target>

  <target depends="check_for_jdom" name="docs-prepare-error"
          unless="jdom.present">
    <echo>
      The Jakarta-Site2 module is not present! Please check
      to make sure that you have checked it out from CVS.

      &lt;http://jakarta.apache.org/site/jakarta-site2.html&gt;
    </echo>
  </target>

  <target name="docs"
          depends="docs-prepare-error"
          description="--> generates the HTML documentation"
          if="jdom.present">

    <taskdef name="anakia"
       classname="org.apache.velocity.anakia.AnakiaTask">
       <classpath>
         <fileset dir="${jakarta.site2}/lib">
           <include name="*.jar"/>
         </fileset>
       </classpath>
     </taskdef>

     <anakia
       basedir="${docs.src}"
       destdir="${docs.dest}/"
       extension=".html" style="./site.vsl"
       projectFile="stylesheets/project.xml"
       excludes="**/stylesheets/** empty.xml"
       includes="**/*.xml"
       lastModifiedCheck="true"
       templatePath="${jakarta.site2}/xdocs/stylesheets">
     </anakia>

     <copy todir="${docs.dest}/images" filtering="no">
       <fileset dir="${docs.src}/images">
         <include name="**/*.gif"/>
         <include name="**/*.jpeg"/>
         <include name="**/*.jpg"/>
       </fileset>
     </copy>

     <!-- In case we have CSS someday
     <copy todir="${docs.dest}" filtering="no">
       <fileset dir="${docs.src}">
         <include name="**/*.css"/>
       </fileset>
     </copy>
     -->
  </target>

  <!-- ================================================================== -->
  <!-- D I S T R I B U T I O N S                                          -->
  <!-- ================================================================== -->

  <target
    name="dist"
    depends="jar,javadocs,docs">

    <property name="distDir" value="${build.dir}/${final.name}"/>

    <!-- B I N A R Y  D I S T R I B U T I O N -->

    <echo>
      +-------------------------------------------------------+
      | C R E A T I N G  B I N A R Y  D I S T R I B U T I O N |
      +-------------------------------------------------------+
    </echo>

    <mkdir dir="${distDir}"/>

    <!-- Copy README and LICENSE -->
    <copy todir="${distDir}" file="README.txt"/>
    <copy todir="${distDir}" file="LICENSE"/>

    <!-- Copy Jars -->
    <copy todir="${distDir}">
      <fileset dir="${build.dir}">
        <include name="**/*.jar"/>
      </fileset>
    </copy>

    <!-- Copy documentation -->
    <copy todir="${distDir}/docs">
      <fileset dir="${docs.dest}">
        <include name="**"/>
      </fileset>
    </copy>

    <!-- Create a tar.gz file -->
    <tar longfile="gnu" tarfile="${final.name}.tar">
      <tarfileset dir="${build.dir}">
        <include name="${final.name}/**"/>
      </tarfileset>
    </tar>

    <gzip zipfile="${final.name}.tar.gz" src="${final.name}.tar"/>
    <delete file="${final.name}.tar"/>

    <!-- Create a zip file -->
    <zip zipfile="${final.name}.zip">
      <zipfileset dir="${build.dir}">
        <include name="${final.name}/**"/>
      </zipfileset>
    </zip>

    <!-- S O U R C E  D I S T R I B U T I O N -->

    <echo>
      +-------------------------------------------------------+
      | C R E A T I N G  S O U R C E  D I S T R I B U T I O N |
      +-------------------------------------------------------+
    </echo>

    <delete>
      <fileset dir="${distDir}">
        <include name="**/*.jar"/>
      </fileset>
    </delete>

    <copy todir="${distDir}" file="default.properties"/>
    <copy todir="${distDir}" file="build.xml"/>

    <!-- Copy Source -->
    <copy todir="${distDir}/src">
      <fileset dir="${src.dir}">
        <include name="**/*.java"/>
      </fileset>
    </copy>

    <!-- Create a tar.gz file -->
    <tar longfile="gnu" tarfile="${final.name}-src.tar">
      <tarfileset dir="${build.dir}">
        <include name="${final.name}/**"/>
      </tarfileset>
    </tar>

    <gzip zipfile="${final.name}-src.tar.gz" src="${final.name}-src.tar"/>
    <delete file="${final.name}-src.tar"/>

    <!-- Create a zip file -->
    <zip zipfile="${final.name}-src.zip">
      <zipfileset dir="${build.dir}">
        <include name="${final.name}/**"/>
      </zipfileset>
    </zip>

  </target>

  <!-- ================================================================== -->
  <!-- I N S T A L L  J A R                                               -->
  <!-- ================================================================== -->

  <target name="install-jar" depends="jar"
          description="--> Installs .jar file in ${lib.repo}">
    <copy todir="${lib.repo}" filtering="no">
      <fileset dir="${build.dir}">
        <include name="${final.name}.jar"/>
      </fileset>
    </copy>
  </target>

  <!-- ================================================================== -->
  <!-- C H E C K  O M                                                     -->
  <!-- ================================================================== -->

  <!-- this will soon be moved into the security services build. -->

  <target name="check-om">
    <uptodate
      property="omGenerated"
      targetfile="${omStatusFile}">
      <srcfiles dir="${schemaDirectory}" includes="turbine-schema.xml"/>
    </uptodate>
  </target>

  <target name="om"
          depends="check-om"
          unless="omGenerated"
          description="--> generates the Turbine OM/Peer classes">

    <ant antfile="build-om.xml" dir="${basedir}"/>
  </target>

</project>
